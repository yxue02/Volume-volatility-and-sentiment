function [spot,spot_varname] = quote_beta_helper_with_beta_all(input)
% Acknowledgement: Part of this file is modified from Dr. Jia Li's codes.
% This is a helper function that computes spot quantities using event data
% generated by fomc_eventgen, as well as the bootstraped version.
%
% Input is a structure contains the following information:
n_events = input.n_events; % number of events
n_stocks = input.n_stocks; % number of stocks
eventtime = input.eventtime; % [Date, Time of events]
eventdata = input.eventdata; % Event data
predata = input.predata; % Pre-event data
postdata = input.postdata; % Post event data
n = input.n; % no. of obs per day


%% Compute

% Box
spot = zeros(n_events,15,n_stocks);
spot_varname = {'Date','Time','Return','Pre Volatility','Post Volatility',...
    'Pre Beta','Post Beta','Pre Systematic Volatility','Post Systematic Volatility',...
    'Pre Idiosyncratic Volatility', 'Post Idiosyncratic Volatility',...
    'Pre Market Volatility','Post Market Volatility','Pre Volume','Post Volume'};
spot_mkt_pre = zeros(n_events,1);
spot_mkt_post = zeros(n_events,1);
% Date and time
spot(:,1:2,:) = repmat(eventtime,1,1,n_stocks);
beta_all = input.beta_all;
%spot(:,1:2,2) = eventtime;
% Return over the event window
for i = 1:n_events
    %spot(i,3,:) = sum(eventdata(:,4,:,i),1);
    spot(i,3,:) = sum(eventdata(:,4,:,i),1);
end

% Pre and post market volatility. Remember that returns overflow to other
% days are denoted NaN.
for i = 1:n_events
    % pre for data1
    tmpdx_all = predata(:,4,n_stocks,i);
    tmpun_all = predata(:,7,n_stocks,i);
    tmpdx = tmpdx_all(~isnan(tmpdx_all));
    tmpun = tmpun_all(~isnan(tmpun_all));
    trunc = (abs(tmpdx) <= tmpun);
    spot_mkt_pre(i) = sum(tmpdx.^2 .* trunc) / sum(trunc) * n; % Unit of time = 1 day
    % post for data1
    tmpdx_all = postdata(:,4,n_stocks,i);
    tmpun_all = postdata(:,7,n_stocks,i);
    tmpdx = tmpdx_all(~isnan(tmpdx_all));
    tmpun = tmpun_all(~isnan(tmpun_all));
    trunc = (abs(tmpdx) <= tmpun);
    spot_mkt_post(i) = sum(tmpdx.^2 .* trunc) / sum(trunc) * n; % Unit of time = 1 day
end

for i = 1:n_events
    % pre for data2
    tmpdx_all = predata(:,4,:,i);
    tmpun_all = predata(:,7,:,i);
%     tmpdx = tmpdx_all(~isnan(tmpdx_all));
%     tmpun = tmpun_all(~isnan(tmpun_all));
    tmpdx = tmpdx_all;
    tmpun = tmpun_all;
    trunc = (abs(tmpdx) <= tmpun);
    spot(i,4,:) = sum(tmpdx.^2 .* trunc) ./ sum(trunc) * n; % Unit of time = 1 day
    % post for data2
    tmpdx_all = postdata(:,4,:,i);
    tmpun_all = postdata(:,7,:,i);
%     tmpdx = tmpdx_all(~isnan(tmpdx_all));
%     tmpun = tmpun_all(~isnan(tmpun_all));
    tmpdx = tmpdx_all;
    tmpun = tmpun_all;
    trunc = (abs(tmpdx) <= tmpun);
    spot(i,5,:) = sum(tmpdx.^2 .* trunc) ./ sum(trunc) * n; % Unit of time = 1 day
end
% Pre and post beta

% pre
    %beta

    spot(:,6,:) = reshape(beta_all,n_events,1,n_stocks); % Unit of time = 1 day
    % systematic volatility
    spot(:,8,:) = spot(:,6,:).^2 .* repmat(spot_mkt_pre,1,1,n_stocks); 
    % idiosyncratic volatility
    spot(:,10,:) = spot(:,4,:) - spot(:,8,:);

% post    
    %beta
    spot(:,7,:) = reshape(beta_all,n_events,1,n_stocks); 
    % systematic volatility
    spot(:,9,:) = spot(:,7,:).^2 .* repmat(spot_mkt_post,1,1,n_stocks); 
    % idiosyncratic volatility
    spot(:,11,:) = spot(:,5,:)-spot(:,9,:); 

spot(:,12,:) = repmat(spot_mkt_pre,1,1,n_stocks);
spot(:,13,:) = repmat(spot_mkt_post,1,1,n_stocks);
% Pre and post volume intensity
for i = 1:n_events
    % pre
    tmpv_all = predata(:,5,:,i);
%     tmpv = tmpv_all(~isnan(tmpv_all));
    tmpv = tmpv_all;
    spot(i,14,:) = mean(tmpv);
    % post
    tmpv_all = postdata(:,5,:,i);
%     tmpv = tmpv_all(~isnan(tmpv_all));
    tmpv = tmpv_all;
    spot(i,15,:) = mean(tmpv);
end